{"remainingRequest":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\src\\views\\Notifications.vue?vue&type=template&id=1649291e&","dependencies":[{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\src\\views\\Notifications.vue","mtime":1616727095000},{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}