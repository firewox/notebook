{"remainingRequest":"G:\\notebook_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\notebook_web\\src\\layouts\\default\\ListGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\notebook_web\\src\\layouts\\default\\ListGroup.vue","mtime":1649830615521},{"path":"G:\\notebook_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\notebook_web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\notebook_web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\notebook_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\notebook_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIFV0aWxpdGllcwppbXBvcnQgeyBnZXQgfSBmcm9tICd2dWV4LXBhdGhpZnknCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0RlZmF1bHRMaXN0R3JvdXAnLAoKICBjb21wb25lbnRzOiB7CiAgICBEZWZhdWx0TGlzdEl0ZW06ICgpID0+IGltcG9ydCgnLi9MaXN0SXRlbScpLAogIH0sCgogIHByb3BzOiB7CiAgICBpdGVtOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KSwKICAgIH0sCiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGdyYWRpZW50OiBnZXQoJ3VzZXIvZHJhd2VyQGdyYWRpZW50JyksCiAgICBncm91cCAoKSB7CiAgICAgIHJldHVybiB0aGlzLmdlbkdyb3VwKHRoaXMuaXRlbS5pdGVtcykKICAgIH0sCiAgICB0aXRsZSAoKSB7CiAgICAgIGNvbnN0IG1hdGNoZXMgPSB0aGlzLml0ZW0udGl0bGUubWF0Y2goL1xiKFx3KS9nKQoKICAgICAgcmV0dXJuIG1hdGNoZXMuam9pbignJykKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgZ2VuR3JvdXAgKGl0ZW1zKSB7CiAgICAgIHJldHVybiBpdGVtcy5yZWR1Y2UoKGFjYywgY3VyKSA9PiB7CiAgICAgICAgaWYgKCFjdXIudG8pIHJldHVybiBhY2MKCiAgICAgICAgYWNjLnB1c2goCiAgICAgICAgICBjdXIuaXRlbXMKICAgICAgICAgICAgPyB0aGlzLmdlbkdyb3VwKGN1ci5pdGVtcykKICAgICAgICAgICAgOiBjdXIudG8uc2xpY2UoMSwgLTEpLAogICAgICAgICkKCiAgICAgICAgcmV0dXJuIGFjYwogICAgICB9LCBbXSkuam9pbignfCcpCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["ListGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ListGroup.vue","sourceRoot":"src/layouts/default","sourcesContent":["<template>\n  <v-list-group\n    :color=\"gradient !== 1 ? 'white' : undefined\"\n    :group=\"group\"\n    :prepend-icon=\"item.icon\"\n    eager\n    v-bind=\"$attrs\"\n  >\n    <template v-slot:activator>\n      <v-list-item-icon\n        v-if=\"!item.icon && !item.avatar\"\n        class=\"text-caption text-uppercase text-center my-2 align-self-center\"\n        style=\"margin-top: 14px\"\n      >\n        {{ title }}\n      </v-list-item-icon>\n\n      <v-list-item-avatar v-if=\"item.avatar\">\n        <v-img :src=\"item.avatar\" />\n      </v-list-item-avatar>\n\n      <v-list-item-content v-if=\"item.title\">\n        <v-list-item-title v-text=\"item.title\" />\n      </v-list-item-content>\n    </template>\n\n    <template v-for=\"(child, i) in item.items\">\n      <default-list-group\n        v-if=\"child.items\"\n        :key=\"`sub-group-${i}`\"\n        :item=\"child\"\n      />\n\n      <default-list-item\n        v-if=\"!child.items\"\n        :key=\"`child-${i}`\"\n        :item=\"child\"\n      />\n    </template>\n  </v-list-group>\n</template>\n\n<script>\n  // Utilities\n  import { get } from 'vuex-pathify'\n\n  export default {\n    name: 'DefaultListGroup',\n\n    components: {\n      DefaultListItem: () => import('./ListItem'),\n    },\n\n    props: {\n      item: {\n        type: Object,\n        default: () => ({}),\n      },\n    },\n\n    computed: {\n      gradient: get('user/drawer@gradient'),\n      group () {\n        return this.genGroup(this.item.items)\n      },\n      title () {\n        const matches = this.item.title.match(/\\b(\\w)/g)\n\n        return matches.join('')\n      },\n    },\n\n    methods: {\n      genGroup (items) {\n        return items.reduce((acc, cur) => {\n          if (!cur.to) return acc\n\n          acc.push(\n            cur.items\n              ? this.genGroup(cur.items)\n              : cur.to.slice(1, -1),\n          )\n\n          return acc\n        }, []).join('|')\n      },\n    },\n  }\n</script>\n"]}]}