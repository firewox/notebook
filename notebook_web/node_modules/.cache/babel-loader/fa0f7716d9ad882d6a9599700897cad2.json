{"remainingRequest":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\babel-loader\\lib\\index.js!F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\vuetify\\lib\\components\\VCombobox\\VCombobox.js","dependencies":[{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\vuetify\\lib\\components\\VCombobox\\VCombobox.js","mtime":499162500000},{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\babel.config.js","mtime":1616727095000},{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vue-cli\\material-dashboard-pro-theme-free-v1.2.1\\theme\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["VSelect","VAutocomplete","keyCodes","extend","name","props","delimiters","type","Array","default","returnObject","Boolean","data","editingIndex","computed","computedCounterValue","multiple","selectedItems","length","internalSearch","toString","hasSlot","options","call","isAnyValueAllowed","menuCanShow","isFocused","hasDisplayedItems","$slots","hideNoData","searchIsDirty","methods","onInternalSearchChanged","val","delimiter","find","endsWith","d","slice","updateTags","updateMenuDimensions","genInput","input","attrs","on","paste","onPaste","genChipSelection","item","index","chip","componentOptions","listeners","dblclick","getText","selectedIndex","onChipInput","onEnterDown","e","preventDefault","getMenuIndex","$nextTick","updateSelf","onKeyDown","keyCode","ctrlKey","home","end","includes","left","$refs","selectionStart","enter","changeSelectedIndex","onTabDown","stopPropagation","selectItem","updateEditing","toLocaleLowerCase","setSelectedItems","internalValue","setValue","value","undefined","findIndex","Object","assign","splice","push","updateCombobox","isUsingSlot","$scopedSlots","selection","hasChips","menuIndex","itemToSelect","event","pastedItemText","clipboardData","_event$clipboardData","getData","findExistingIndex","clearableCallback"],"sourceRoot":"","sources":["../../../src/components/VCombobox/VCombobox.ts"],"sourcesContent":["// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value === undefined ? this.internalSearch : value)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n"]}]}